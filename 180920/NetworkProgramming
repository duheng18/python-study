网络编程
本章将通过示例展示如何使用Python来编写以各种方式使用网络(如互联网)的程序。。Python 提供了强大的网络编程支持，有很多库实现了常见的网络协
议以及基于这些协议的抽象层，让你能够专注于程序的逻辑，而无需关心通过线路来传输比特的问题。另外，对于有些协议格式，可能没有处理它们的现成
代码，但编写起来也很容易，因为Python很擅长处理字节流中的各种模式(从本书前面介绍的各种处理文本文件的方式中，你可能领教了这一点)。

本章首先概述Python标准库中的一些网络模块。然后讨论SocketServer和相关的类，并介绍同时处理多个连接的各种方法。最后，简单地说一说Twisted，
这是一个使用Python编写网络程序的框架，功能丰富而成熟。

注意
如果你的计算机上安装了严格的防火墙，每当你开始运行自己编写的网络程序时，它都可能发出警告，并禁止程序连接到网络。你应对防火墙进行配置，让
它允许Python完成其工作。如果防火墙有交互式接口，只需在询问时允许建立连接即可。然而，需要注意的是，任何连接到网络的软件都是安全隐患，即便
是你自己编写的软件亦如此(或者说尤其如此)。

14.1 几个网络模块
标准库中有很多网络模块，其他地方也有不少。有些网络模块明显主要是处理网络的，但还有几个其实也是与网络相关的，如处理各种数据编码以便通过网络
传输的模块。这里精挑细选了几个模块进行介绍。
14.1.1 模块socket
网络编程中的一个基本组件是套接字(socket)。套接字基本上是一个信息通道，两端各有一个程序。这些程序可能位于(通过网络相连的)不同的计算机上，
通过套接字向对方发送信息。在Python中，大多数网络编程都隐藏了模块socket的基本工作原理，不与套接字直接交互。套接字分为两类:服务器套接字和
客户端套接字。创建服务器套接字后，让它等待连接请求的到来。这样，它将在某个网络地址(由IP地址和端口号组成)处监听，直到客户端套接字建立连接
。随后，客户端和服务器就能通信了。客户端套接字处理起来通常比服务器端套接字容易些，因为服务器必须准备随时处理客户端连接，还必须处理多个连
接;而客户端只需连接，完成任务后再断开连接即可。
本章后面将介绍如何使用SocketServer等类和Twisted框架进行服务器端编程。
套接字是模块socket中socket类的实例。实例化套接字时最多可指定三个参数:一个地址族(默认为socket.AF_INET);是流套接字(socket.SOCK_STREAM，
默认设置)还是数据报套接字 (socket.SOCK_DGRAM);协议(使用默认值0就好)。创建普通套接字时，不用提供任何参数。
服务器套接字先调用方法bind，再调用方法listen来监听特定的地址。然后，客户端套接字就可连接到服务器了，办法是调用方法connect并提供调用方法
bind时指定的地址(在服务器端，可使用函数socket.gethostname获取当前机器的主机名)。这里的地址是一个格式为(host, port) 的元组，其中host
是主机名(如www.example.com)，而port是端口号(一个整数)。方法listen接受一个参数——待办任务清单的长度(即最多可有多少个连接在队列中等待接
纳，到达这个数量后将开始拒绝连接)。
服务器套接字开始监听后，就可接受客户端连接了，这是使用方法accept来完成的。这个方法将阻断(等待)到客户端连接到来为止，然后返回一个格式为
(client, address)的元组，其中client是一个客户端套接字，而address是前面解释过的地址。服务器能以其认为合适的方式处理客户端连接，然后再
次调用accept以接着等待新连接到来。这通常是在一个无限循环中完成的。
注意 这里讨论的服务器编程形式称为阻断(同步)网络编程。在14.3节，你将看到非阻断(异 步)网络编程示例，以及如何使用线程来同时处理多个客户端。
为传输数据，套接字提供了两个方法:send和recv(表示receive)。要发送数据，可调用方法send并提供一个字符串;要接收数据，可调用recv并指定最多
接收多少个字节的数据。如果不确定该指定什么数字，1024是个不错的选择。
代码清单14-1和14-2展示了最简单的客户端程序和服务器程序。如果在同一台机器上运行它们(先运行服务器程序)，服务器程序将打印一条收到连接请求的
消息，然后客户端程序将打印它从服务器那里收到的消息。在服务器还在运行时，可运行多个客户端。在客户端程序中，通过将gethostname调用替换为服务
器机器的主机名，可分别在两台通过网络连接的机器上运行这两个程序.

14.1.2 模块urllib和urllib2
在可供使用的网络库中，urllib和urllib2可能是投入产出比最高的两个。它们让你能够通过网络访问文件，就像这些文件位于你的计算机中一样。只需一
个简单的函数调用，就几乎可将统一资源定位符(URL)可指向的任何动作作为程序的输入。想想将这种功能与模块re结合起来 使用都能做什么吧!你可下载
网页、从中提取信息并自动生成研究报告。
模块urllib和urllib2的功能差不多，但urllib2更好一些。对于简单的下载，urllib绰绰有余。如果需要实现HTTP身份验证或Cookie，抑或编写扩展来
处理自己的协议，urllib2可能是更好的选择。
1. 打开远程文件
几乎可以像打开本地文件一样打开远程文件，差别是只能使用读取模式，以及使用模块urllib.request中的函数urlopen，而不是open(或file)。
