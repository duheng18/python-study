单元开篇
一维数据的格式化和处理
数据组织的维度
一维数据的表示
一维数据的存储
一维数据的处理

数据组织的维度：
从一个数据到一组数据
一个数据表达一个含义  一组数据表达一个或多个含义
维度：一组数据的组织形式
数据组成形式：线性方式、二维方式组织

一维数据
由对等关系的有序或无序数据构成，采用线性方式组织
对应列表、数组和集合等概念

二维数据
由多个一维数据构成，是一维数据的组合形式

高维数据
仅利用最基本的二元关系展示数据间的复杂结构

数据的操作周期
存储 < - > 表示 < - > 操作
数据存储：数据再磁盘中的存储状态 关注：数据存储和使用的格式
数据表示：程序表达数据的方式  关注：数据类型  如：用什么样的数据类型表达什么样的数据
数据操作：对数据进行操作。关注：相关操作方式和算法。

一维数据的表示
如果数据间有序：使用列表类型
ls=[3.1398,3.1349,3.1376]
列表类型可以表达一维有序数据
for循环可以遍历数据，进而对每个数据进行处理
如果数据间无序：使用集合类型
st={3.1398,3.1349,3.1376}
集合类型可以表达一维无序数据
for循环可以遍历数据，进而对每个数据进行处理

一维数据的存储
存储方式一：空格分隔
中国 美国 日本 德国 法国 英国 意大利
使用一个或多个空格分隔进行存储。不换行
缺点：数据中不能存在空格
存储方式二：逗号分隔
中国,美国,日本,德国,法国,英国,意大利
使用英文半角逗号分隔数据进行存储，不换行
缺点：数据中不能有英文逗号
存储方式三：其他方式
中国$美国$日本$德国$法国$英国$意大利
使用其他符号或符号组合分隔，建议采用特殊符号
缺点：需要根据数据特点定义，通用性较差

一维数据的处理
存储<->表示
数据的处理
数据存储：存储格式
数据表示：数据类型
数据存储-> 数据表示 将存储数据读入程序
数据存储<- 数据表示 将程序表示的数据写入文件

一维数据的读入处理
从空格分隔的文件中读入数据
中国 美国 日本 德国 法国 英国 意大利
txt=open(fname).read()
ls=txt.split()
f.close
从特殊符号分隔的文件中读入数据
中国$美国$日本$德国$法国$英国$意大利
txt=open(fname).read()
ls=txt.split("$")
f.close
一维数据的写入处理
采用空格分隔方式将数据写入文件
ls=['中国','美国','日本']
f=open(fname,'w')
join方法的作用：将join前面的字符串分隔放置到后边的各个元素之前
f.write(' '.join(ls))
f.close()
采用特殊分隔方式将数据写入文件
ls=['中国','美国','日本']
f=open(fname,'w')
f.write('$',join(ls))
f.close()