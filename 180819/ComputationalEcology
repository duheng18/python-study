计算生态
从开源运动说起....
-1983，Rihard Stallman启动GNU项目-----------大教堂模式
-1989，GNU通用许可协议诞生，自由软件时代到来
-1991，Linux Torvalds发布了Linux内核---------集市模式
-1998，网景浏览器开源，产生了Mozilla.
开源生态逐步建立
计算生态
开源思想深入演化和发展，形式了计算生态。
计算生态以开源项目为组织形式，充分利用"共识原则"和"社会利他"组织人员，
在竞争发展、相互依存和迅速更迭中完成信息技术大更新换代，形式了技术的自我
演化路径。

计算生态没有顶层设计，以功能为单位、具备三个特点：
-竞争发展
-相互依存
-迅速更迭
-以开源项目为代表的大量第三方库
    Python语言提供>13万第三方库
-库的建设经过野蛮生长和自然选择
-库之间相互关联使用，依存发展
    python库之间广泛联系，逐级封装
-社区庞大，新技术更迭迅速
    AlphaGo深度学习算法采用Python语言开源
    API 应用程序编写接口 api!=生态
计算生态的价值
创新：跟随创新、集成创新、原始创新
-加速科技类应用创新的重要支撑。
-发展科技产品商业价值的重要模式。
-国家科技体系安全和稳固的基础。
计算生态的运用
刀耕火种-->站在巨人的肩膀上
-编程的起点不是算法而是系统
-编程如同搭积木，利用计算生态为主要模式。
-编程的目标是快速解决问题
优质的计算生态 http://python123.io

用户体验
实现功能->关注体验
-用户体验指用户对产品建立的主观感受和认识。
-关心功能实现，更要关心用户体验，才能做出好产品。
-编程只是手段，不是目的，程序最终为人类服务。
提高用户体验的方法
方法1：进度展示
-如果程序需要计算时间，可能产生等等，请增加进度展示。
-如果程序有若干步骤，需要提示用户，请增加进度展示。
-如果程序可能存在大量次数的循环，请增加进度展示。
方法2：异常处理
-当获得用户输入，对合规性需要检查，需要异常处理。
-当读写文件时，对结果进行判断，需要异常处理。
-当进行输入输出时，对运算结果进行判断，需要异常处理。
其他类方法
-打印输出：特定位置，输出程序运行的过程信息。
-日志文件：对程序异常及用户使用进行定期记录。
-帮助信息：给用户多种方式提供帮助信息。
软件程序->软件产品
用户体验是程序到产品的关键环节
