异常
如何创建和引发自定义的异常，以及处理异常的各种方法。
Python用异常对象来表示异常情况。遇到错误后，会引发异常。如果异常对象并未被处理或捕捉，程序就会用所谓的回溯终止执行：
如何引发异常
创建自己的异常类型
https://docs.python.org/3/library/exceptions.html#IndexError
基类
以下异常主要用作其他异常的基类。
异常BaseException
所有内置异常的基类。它并不意味着由用户定义的类直接继承（为此，使用Exception）。如果 str()在此类的实例上调用，则返回实例的参数表示，或者在没有参数时返回空字符串。
args
赋予异常构造函数的参数元组。一些内置异常（例如OSError）期望一定数量的参数并为该元组的元素赋予特殊含义，而其他异常通常仅使用一个字符串来调用，从而产生错误消息。
with_traceback（tb ）¶
此方法将tb设置为异常的新回溯并返回异常对象。它通常用于异常处理代码，如下所示：
try:
    ...
except SomeException:
    tb = sys.exc_info()[2]
    raise OtherException(...).with_traceback(tb)
异常Exception
所有内置的，非系统退出的异常都是从这个类派生的。所有用户定义的异常也应该从此类派生。

异常ArithmeticError
对于那些内置异常的基类时引发的各种算术错误：OverflowError，ZeroDivisionError， FloatingPointError。

异常BufferError
无法执行与缓冲区相关的操作时引发。

异常LookupError
当映射或序列上使用的键或索引无效时引发的异常的基类：IndexError，KeyError。这可以直接提出codecs.lookup()。

异常AttributeError
当属性引用（请参阅属性引用）或赋值失败时引发。（当一个对象完全不支持属性引用或属性赋值时TypeError）。

保留以下例外以与先前版本兼容; 从Python 3.3开始，它们是。的别名OSError。
异常EnvironmentError
异常IOError
异常WindowsError
仅适用于Windows。

异常IndexError
当序列下标超出范围时引发。（切片索引被静默截断以落在允许的范围内;如果索引不是整数，TypeError则会被提升。）

异常KeyError
在现有密钥集中找不到映射（字典）密钥时引发。

异常NameError
未找到本地或全局名称时引发。这仅适用于不合格的名称。关联的值是一条错误消息，其中包含无法找到的名称。

异常SyntaxError
解析器遇到语法错误时引发。这可能发生在一个 import声明，调用内置的功能exec() 或eval()阅读初始脚本或标准输入（也交互）时，或
这个类的实例有属性filename，lineno， offset并且text为的细节更容易获得。 str() 异常实例仅返回消息。

异常TypeError
将操作或函数应用于不适当类型的对象时引发。关联值是一个字符串，提供有关类型不匹配的详细信息。
用户代码可以引发此异常，以指示不支持对对象的尝试操作，并且不应该支持。如果一个对象旨在支持给定的操作但尚未提供实现，
NotImplementedError则引发的适当例外。传递错误类型的参数（例如，list在int预期时 传递a ）应该导致a TypeError，
但是传递具有错误值的参数（例如，在预期边界之外的数字）应该导致a ValueError。

异常ValueError
当一个操作或函数接收到具有正确类型但是值不合适的参数时引发，并且没有更精确的异常描述该情况，例如IndexError。

异常ZeroDivisionError
当除法或模运算的第二个参数为零时引发。关联值是一个字符串，表示操作数的类型和操作。