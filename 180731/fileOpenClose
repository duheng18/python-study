文件的打开和关闭
文件处理的步骤：打开-操作-关闭
文件的存储状态 ->文件的占用状态  a.open(,)
文件的占用状态 ->文件的存储状态  a.close()
文件打击之后可以对文件进行读写操作
读文件：a.read(size) a.readline(size) a.readlines(hint)
写文件：a.write(s) a.writelines(lines) a.seek(offset)

文件的打开:
<变量名> = open(<文件名>,<打开模式>)
变量名：文件句柄
文件名：文件路径和名称  源文件同目录可省路径
打开模式：文本 or 二进制  读 or 写

文件的路径和名称：  绝对路径 如D:\python\f.txt  -> D:/python/f.txt 或 D:\\python\\f.txt
相对路径： "./python/f.txt"
相同目录： "f.txt"
文件的打开模式
'r' 只读模式，默认值，如果文件不存在，返回FileNotFoundError
'w' 覆盖写模式，文件不存在则创建，存在则完全覆盖
'x' 创建写模式，文件不存在则创建，存在则返回FileExistsError
'a' 追加写模式，文件不存在则创建，存在则文件最后追加内容
'b' 二进制文件模式
't' 文本文件模式，默认值
'+' 与r/w/x/a一同使用，再原功能基础上增加同时读写功能

打开模式：
f=open("f.txt") -文本形式、只读模式、默认值
f=open("f.txt","rt") -文本形式、只读模式、同默认值
f=open("f.txt","w") -文本形式、覆盖写模式
f=open("f.txt","a+") -文本形式、追加写模式+读文件 只有a只可以往文件写信息，不能读取信息
f=open("f.txt","x") -文本形式、创建写模式
f=open("f.txt","b")  -二进制形式、只读模式
f=open("f.txt","wb") -二进制形式、覆盖写模式

文件的关闭：
<变量名>.close()
变量名：文件句柄