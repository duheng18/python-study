数字类型及操作
整数类型的无限范围及4种进制表示
浮点数类型的近似无限范围、小尾数及科学计数法
复数类型
+、-、*、/、//、%、**、二元增强赋值操作符
方法和函数：abs()、divmod()、pow()、round()、max()、min()
int()、float()、complex()

字符串类型及操作
序号、索引、切片
正向递增序号、反向递减序号、<字符串> [M:N:K]
运算符：+、*、len()、str()、hex()、oct()、ord()、chr()
函数：.lower()、.upper()、.split()、.count()、.replace()
方法：.center()、.strip()、.join()、.format()格式化

程序的分支结构
单分支if 二分支if-else及紧凑形式
多分支if-elif-else及条件之间关系
not and or > >= == <= < !=
异常处理 try-except-else-finally

程序的循环结构
for...in 遍历循环:计数、字符串、列表、文件...
while无限循环
continue和break保留字:退出当前循环层次

函数的定义和使用
使用保留字def定义函数，lambda定义匿名函数
可选参数（赋初值）、可变参数（*b）、名称传递
保留字return可以返回任意多个结果
保留字global声明使用全局变量，一些隐式规则

代码复用与函数递归
模块化设计：松耦合、紧耦合
函数递归的2个特征：基例和链条
函数递归的实现：函数+分支结构

组合数据类型
集合类型及操作
集合使用{}和set{}函数创建
集合间操作：交（&）、并（|）、差（-）、补（^）、比较（>=<）
集合类型方法：.add()、.discard()、.pop()等
集合类型主要应用于：包含关系比较、数据去重

序列类型及操作
序列是基类类型，扩展类型包括：字符串、元组和列表
元组用()和tuple()创建，列表用[]和list()创建
元组操作与序列操作基本相同
列表操作再序列操作基础上，增加了更多的灵活性

字典类型及操作
映射关系采用键值对表达
字典类型使用{}和dict()创建，键值对之间用:分隔
d[key]方式可以索引，也可以赋值

基础语法体系：基本数据类型、程序的控制逻辑、函数和代码复用、组合数据类型、文件和数据格式化




