对象：对象包括特性和方法。特性只是作为对象的一部分的变量，方法则是存储在对象内的函数。
（绑定）方法和其他函数的区域在于方法总是将对象作为自己的第一个参数，这个参数一般称为self。
类：类代表对象的集合（或一类对象。）每个对象（实例）都有一个类。类的主要任务是定义它的实例
会用到的方法。
多态：多态是实现将不同类型和类的对象进行同样对待的特性--不需要知道对象属于哪个类就能调用方法。
封装；对象可以将它们的内部状态隐藏（或封装）起来。
继承：一个类可以是一个或者多个类的子类。
接口和内省
面向对象设计
callable(object):确定对象是否可调用（比如函数或者方法）
getattr(object,name,[default]):确定特性的值，可选择提供默认值
hasattr(object,name):确定对象是否有给定的特性
isinstance(object,class):确定对象是否是类的实例
issubclass(A,B):确定A是否是B的子类
random.choice(sequence):从非空序列中随机选择元素
setattr(object,name,value):设定对象的给定特性为value
type(object):返回对象的类型