https://blog.csdn.net/powerccna
一面向对象编程思想

把数据和对数据的操作用一种叫做“对象”的东西包裹起来。这种被称为“面向对象”的编程。

面向对象编程最主要的两个概念就是：类（class）和对象/实例（instance）

类是一种抽象的类型，而对象是这种类型的实例

把共同的属性抽象出来【类】，在实例化里面设置各自的属性（对象）



二类、模块、包的区别
什么的类
class Person:
    def __init__(self):
        print "Init the class"
什么是模块
test.py

什么是包

包即目录中包含有__init__.py文件

类、模块、包三者直接的关系是什么

类是模块的儿子、模块又是包的儿子

三类的定义，构造函数

四self含义，类变量，实例变量

类的变量

self的含义
（1）在Python类的方法必须有个额外的第一个参数(self)
（2）在调用这个方法的时候不必为这个参数赋值
（3）指代的是对象本身

构造方法
类变量
    在多个实例中共享数据
实例变量
    变量只作用在此实例中
类方法

五访问类的函数、属性

六变量作用域，下划线的含义

下划线,双下划线的作用
    变量名如果以__开头，就边变成了一个私有变量（private）

    变量名如果以_开头，这样的变量可以被外部所访问，但是，按照约定俗成的规定，当你看到这样的变量时，
    意思就是，“虽然我可以被访问，但是，请把我视为私有变量，不用随意访问”

    变量名类似__xx__的，也就是以双下划线开头，并且以双下划线结尾的，系统自定义名字，不建议占用。
七类的继承，访问父类

初始化父类的方法
    def __init__(self,name,sex,province):
        Person.__init__(self,name,sex,province)
多态
    重写父类方法，实现不同的业务逻辑
派生
    在子类中实现新的方法
子类中访问父类方法
    必须带上self:Person.get_name(self)

八静态方法，类方法

静态方法不需要实例化**
静态方法、类方法，可以被类或者类的实例对象调用
实例方法只能被实例对象调用

静态方法，参数没有要求
类方法，第一个参数必须要默认传类，一般习惯用cls  **
实例方法，第一个，参数必须要默认传实例对象，一般习惯用self

一个方法被定义为property的时候，调用方法会和实例方法不一样
@property
    def get_sex(self):
        return self.sex

九装饰器

接收一个函数作为参数，然后，返回一个新函数
@new_fn                     def f1(x):
def f1(x):                      return x*2
    return x*2              f1=new_fn(f1)

十自定义Python包
自定义包
    自定义包的方式
    在自己工程里面怎么访问自定义包
