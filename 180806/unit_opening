二维数据的格式化和处理
二维数据的表示
CSV数据存储格式
二维数据的存储
二维数据的处理

二维数据的表示
列表类型可以表达二维数据
使用二维列表
[[3.1398,3.1349,3.1376],[3.1413,3.1404,3.1401]]
使用列表类型[[3.1398,3.1349,3.1376],[3.1413,3.1404,3.1401]]
使用两层for循环遍历每个元素
外层列表中每个元素可以对应一行，也可以对应一列
一二维数据的Python表示
数据维度是数据的组织形式
一维数据：列表和集合类型
[3.1398,3.1349,3.1376] 数据间有序
(3.1398,3.1349,3.1376) 数据间无序
二维数据：列表类型
[[3.1398,3.1349,3.1376],[3.1413,3.1404,3.1401]]

CSV格式与二维数据存储
CSV：Comma-Separated Valus 指的是由逗号分隔的值
简单说指的是用逗号分隔值的一种存储方式
国际通用的一二维数据存储格式，一般.csv扩展名
每行一个一维数据，采用逗号分隔，文件中无空行
Excel软件可读入输出，一般编辑软件都可以生成或者转化为.csv格式
csv格式是数据转化之前的通用的标准格式。
如果某个元素缺失，逗号仍要保留。
二维数据都表头可以作为数据存储，也可以另行存储。
逗号为英文半角逗号，逗号与数据之间无额外空格。

二维数据都存储
按行存或者按列存都可以，具体又程序决定。
一般索引习惯：ls[row][column],先行后列。

二维数据都处理
从CSV格式都文件中读入数据
fo=open(fname)
ls=[]
for line in fo:
    line=line.replace("\n","")
    ls.append(line.split(","))
fo.close

二维数据都读入处理
将数据写入CSV格式都文件
ls=[[],[],[]] #二维列表
f=open(fname,'w')
for item in ls:
    f.write(','.join(item)+'\n')
f.close

二维数据都逐一处理
采用二层循环
ls=[[],[],[]]#二维列表
for row in ls:
    for column in row:
        print(ls[row][column])



