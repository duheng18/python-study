wordcloud库概述
wordcloud是优秀的词云展示第三方库
词云以词语为基本单位，更加直观和艺术的展示文本。
wordcloud库安装
（cmd命令行）pip install wordcloud

wordcloud库把词云当作一个WordCloud对象
wordcloud.WordCloud()代表一个文本对应的词云
可以根据文本中词语出现的频率等参数绘制词云
绘制词云等形状、尺寸和颜色、字体都可以设定

w=wordcloud.WordCloud()
以WordCloud对象为基础
配置参数、加载文本、输出文件

词云对象：
w.generate(txt) 向WordCloud对象w中加载文本txt   w.generate("Python and WordCloud")
w.to_file(filename) 将词云输出为图像文件，.png或.jpg格式  w.to_file("outfile.png")

词云绘制的步骤介绍                                       import wordcloud
步骤1：配置对象参数                                      c=wordcloud.WordCloud()
步骤2：加载词云文本 .generate方法加载一段文本到这个词云对象中   c.generate("wordcloud by Python")
步骤3：输出词云文件  输出图片                              c.to_file("pywordcloud.png")

又文本变为词云，中间wordcloud库做了哪些事情 四件
1.分隔：以空格分隔单词。 首先对于一个文本wordcloud库以空格为分隔符号，来将文本分隔成单词；
2.统计：单词出现次数并过滤。 会在文本中统计每一个单词出现的次数，次数多的，它显示的词云效果的字体会变得很大，
出现次数少的，它显示的字体会很小。除了统计单词出现的次数，它会将很短的单词，字符过滤掉。
3.字体：根据统计配置字号。
4.布局：颜色环境尺寸。

配置对象参数
w=wordcloud.WordCloud(<参数>)
width 指定词云对象生成图片的宽度，默认400像素 w=wordcloud.WordCloud(width=600)
height 指定词云对象生成图片的高度，默认200像素 w=wordcloud.WordCloud(height=400)
min_font_size 指定词云中字体的最小字号，默认4号 w=wordcloud.WordCloud(min_font_size=10)
max_font_size 指定词云中字体的最大字号，根据高度自动调节 w=wordcloud.WordCloud(max_font_size=20)
font_step 指定词云中字体字号的步进间隔，默认为1 w=wordcloud.WordCoud(font_size=2)
font_path 指定字体文件的路径，默认None w=wordcloud.WordCloud(font_path="msyh.ttc")
max_words 指定词云显示的最大单词数量，默认200 w=wordcloud.WordCloud(max_words=20)
stop_words 指定词云的排除词列表，即不显示的单词列表 w=wordcloud.WordCloud(stop_words={"Python"})

mask 指定词云形状，默认为长方形，需要引用imread()函数
from scipy.misc import imread
mk=imread("pic.png")
w=wordcloud.WordCloud(mask=mk)

background_color 指定词云图片的背景颜色，默认为黑色 w=wordcloud.WordCloud(background_color="white")
