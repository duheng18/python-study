from tkinter import *

top = Tk()


def callback(event):
    print(event.x, event.y)


# print(top.bind('<Button-1>', callback))
# 4323940744callback

# 其中<Button-1>是使用鼠标左按钮(按钮1)单击的事件名称。我们将这种事件关联到函数 callback。这样，每当用户在窗口top中单击时，都将调用这个函数。
# 向函数callback传递一个event对象，这个对象包含的属性随事件类型而异。例如，对于鼠标单击事件，它提供了x和y坐标，在 这个示例中将它们打印出来了。
# 还有很多其他类型的事件，完整的清单可使用下面的命令来获取:

help(Tk.bind)

# Help on function bind in module tkinter:
#
# bind(self, sequence=None, func=None, add=None)
#     Bind to this widget at event SEQUENCE a call to function FUNC.
#
#     SEQUENCE is a string of concatenated event
#     patterns. An event pattern is of the form
#     <MODIFIER-MODIFIER-TYPE-DETAIL> where MODIFIER is one
#     of Control, Mod2, M2, Shift, Mod3, M3, Lock, Mod4, M4,
#     Button1, B1, Mod5, M5 Button2, B2, Meta, M, Button3,
#     B3, Alt, Button4, B4, Double, Button5, B5 Triple,
#     Mod1, M1. TYPE is one of Activate, Enter, Map,
#     ButtonPress, Button, Expose, Motion, ButtonRelease
#     FocusIn, MouseWheel, Circulate, FocusOut, Property,
#     Colormap, Gravity Reparent, Configure, KeyPress, Key,
#     Unmap, Deactivate, KeyRelease Visibility, Destroy,
#     Leave and DETAIL is the button number for ButtonPress,
#     ButtonRelease and DETAIL is the Keysym for KeyPress and
#     KeyRelease. Examples are
#     <Control-Button-1> for pressing Control and mouse button 1 or
#     <Alt-A> for pressing A and the Alt key (KeyPress can be omitted).
#     An event pattern can also be a virtual event of the form
#     <<AString>> where AString can be arbitrary. This
#     event can be generated by event_generate.
#     If events are concatenated they must appear shortly
#     after each other.
#
#     FUNC will be called if the event sequence occurs with an
#     instance of Event as argument. If the return value of FUNC is
#     "break" no further bound function is invoked.
#
#     An additional boolean parameter ADD specifies whether FUNC will
#     be called additionally to the other bound function or whether
#     it will replace the previous function.
#
#     Bind will return an identifier to allow deletion of the bound function with
#     unbind without memory leak.
#
#     If FUNC or SEQUENCE is omitted the bound function or list
#     of bound events are returned.
